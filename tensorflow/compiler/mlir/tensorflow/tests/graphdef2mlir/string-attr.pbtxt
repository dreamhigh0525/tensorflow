# RUN: tf-mlir-translate -graphdef-to-splatted-mlir %s -o - | FileCheck %s
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
versions {
  producer: 74
}

# CHECK: func @main() {
# CHECK-NEXT: %0:2 = "_tf.Const"() {_output_shapes = ["tfshape$dim {\0A  size: 3\0A}\0A"], device = "", dtype = "tfdtype$DT_STRING", name = "save/SaveV2/shape_and_slices", value = opaque<"tf", "0x746674656E736F722464747970653A2044545F535452494E470A74656E736F725F7368617065207B0A202064696D207B0A2020202073697A653A20330A20207D0A7D0A737472696E675F76616C3A2022220A737472696E675F76616C3A2022220A737472696E675F76616C3A2022220A"> : tensor<3x!tf.string>} : () -> (tensor<3x!tf.string>, !_tf.control)
# CHECK-NEXT: return
# CHECK-NEXT: }
