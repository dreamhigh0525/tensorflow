op {
  graph_op_name: "ParallelInterleaveDatasetV2"
  visibility: HIDDEN
  in_arg {
    name: "input_dataset"
    description: <<END
Dataset that produces a stream of arguments for the function `f`.
END
  }
  in_arg {
    name: "other_arguments"
    description: <<END
Additional arguments to pass to `f` beyond those produced by `input_dataset`.
Evaluated once when the dataset is instantiated.
END
  }
  in_arg {
    name: "cycle_length"
    description: <<END
Number of datasets (each created by applying `f` to the elements of
`input_dataset`) among which the `ParallelInterleaveDatasetV2` will cycle in a
round-robin fashion.
END
  }
  in_arg {
    name: "block_length"
    description: <<END
Number of elements at a time to produce from each interleaved invocation of a
dataset returned by `f`.
END
  }
  in_arg {
    name: "num_parallel_calls"
    description: <<END
If this input is >=1, it bounds the number of datasets from which this instance
of `ParallelInterleaveDatasetV2` will fetch simultaneously.
The actual number of parallel calls will depend on the `cycle_length`
parameter, the number of available CPUs, and the number of available datasets.

If this input is set to -1 (i.e. the constant `tf.data.experimental.AUTOTUNE`
in the Python API), then the dataset's kernel will choose an upper bound
automatically.
END
  }
  attr {
    name: "f"
    description: <<END
A function mapping elements of `input_dataset`, concatenated with
`other_arguments`, to a Dataset variant that contains elements matching
`output_types` and `output_shapes`.
END
  }
  attr {
    name: "Targuments"
    description: <<END
Types of the elements of `other_arguments`.
END
  }
  attr {
    name: "output_types"
  }
  attr {
    name: "output_shapes"
  }
  attr {
    name: "sloppy"
    description: <<END
If `True`, return elements as they become available, even if that means returning
these elements in a non-deterministic order. Sloppy operation may result in better
performance in the presence of stragglers, but the dataset will still block if
all of its open streams are blocked.
If `False`, always return elements in a deterministic order.
END
  }
  summary: "Creates a dataset that applies `f` to the outputs of `input_dataset`."
  description: <<END
The resulting dataset is similar to the `InterleaveDataset`, except that the
dataset will fetch records from the interleaved datasets in parallel.

The `tf.data` Python API creates instances of this op from
`Dataset.interleave()` when the `num_parallel_calls` parameter of that method
is set to any value other than `None`.

!! WARNING !! If the `sloppy` parameter is set to `True`, the operation of this
dataset will not be deterministic!

The `sloppy` parameter of this op always starts out set to `False` when the
Python API creates instances of this op. If the `make_sloppy` static
optimization pass runs, that optimization will set the `sloppy` parameter to
`True`. Whether this optimization is performed is determined by the
`experimental_deterministic` parameter of `tf.data.Options`.
END
}
