op {
  graph_op_name: "Bitcast"
  summary: "Bitcasts a tensor from one type to another without copying data."
  description: <<END
Given a tensor `input`, this operation returns a tensor that has the same buffer
data as `input` with datatype `type`.

If the input datatype `T` is larger than the output datatype `type` then the
shape changes from [...] to [..., sizeof(`T`)/sizeof(`type`)].

If `T` is smaller than `type`, the operator requires that the rightmost
dimension be equal to sizeof(`type`)/sizeof(`T`). The shape then goes from
[..., sizeof(`type`)/sizeof(`T`)] to [...].

In case ofconverting from a real data type to complex data type(e.g. tf.complex64,
tf.complex128) tf.bitcast() give error while tf.cast() make imaginary part of output
0.

*NOTE*: Bitcast is implemented as a low-level cast, so machines with different
endian orderings will give different results.
END
}
