From 6656e961c08393c3949412ef945ade0272b66fca Mon Sep 17 00:00:00 2001
From: Alexandre Ganea <alexandre.ganea@ubisoft.com>
Date: Wed, 1 Jan 2020 17:05:16 -0500
Subject: [PATCH] [mlir] Fix compilation warnings
 
Fixes:
- (MSVC) F:\llvm-project\mlir\lib\Dialect\Linalg\Analysis\DependenceAnalysis.cpp(103): warning C4551: function call missing argument list
- (Clang) tools\mlir\lib\Dialect\SPIRV\SPIRVCanonicalization.inc(232,1): warning: unused function 'populateWithGenerated' [-Wunused-function]
---
 mlir/lib/Dialect/Linalg/Analysis/DependenceAnalysis.cpp | 3 ++-
 mlir/tools/mlir-tblgen/RewriterGen.cpp                  | 7 +++++--
 2 files changed, 7 insertions(+), 3 deletions(-)
 
diff --git a/mlir/lib/Dialect/Linalg/Analysis/DependenceAnalysis.cpp b/mlir/lib/Dialect/Linalg/Analysis/DependenceAnalysis.cpp
index e8667f07822..7644cc69218 100644
--- a/mlir/lib/Dialect/Linalg/Analysis/DependenceAnalysis.cpp
+++ b/mlir/lib/Dialect/Linalg/Analysis/DependenceAnalysis.cpp
@@ -24,6 +24,7 @@ using namespace mlir::linalg;
 
 using llvm::dbgs;
 
+#ifndef NDEBUG
 static StringRef toStringRef(LinalgDependenceGraph::DependenceType dt) {
   switch (dt) {
   case LinalgDependenceGraph::DependenceType::RAW:
@@ -39,6 +40,7 @@ static StringRef toStringRef(LinalgDependenceGraph::DependenceType dt) {
   }
   llvm_unreachable("Unexpected DependenceType");
 }
+#endif
 
 Value Aliases::find(Value v) {
   if (v.isa<BlockArgument>())
@@ -100,7 +102,6 @@ void LinalgDependenceGraph::addDependenceElem(DependenceType dt,
                                               LinalgOpView dependentOpView) {
   LLVM_DEBUG(dbgs() << "\nAdd dep type " << toStringRef(dt) << ":\t"
                     << *indexingOpView.op << " -> " << *dependentOpView.op);
-  (void)toStringRef;
   dependencesFromGraphs[dt][indexingOpView.op].push_back(
       LinalgDependenceGraphElem{dependentOpView, indexingOpView.view});
   dependencesIntoGraphs[dt][dependentOpView.op].push_back(
diff --git a/mlir/tools/mlir-tblgen/RewriterGen.cpp b/mlir/tools/mlir-tblgen/RewriterGen.cpp
index 2fe26fe560b..c84b56c0c72 100644
--- a/mlir/tools/mlir-tblgen/RewriterGen.cpp
+++ b/mlir/tools/mlir-tblgen/RewriterGen.cpp
@@ -1020,8 +1020,11 @@ static void emitRewriters(const RecordKeeper &recordKeeper, raw_ostream &os) {
   }
 
   // Emit function to add the generated matchers to the pattern list.
-  os << "void __attribute__((unused)) populateWithGenerated(MLIRContext "
-        "*context, "
+  os << "void\n";
+  os << "#if !defined(_MSC_VER) || defined(__clang__)\n";
+  os << "__attribute__((unused))\n";
+  os << "#endif\n";
+  os << "populateWithGenerated(MLIRContext *context, "
      << "OwningRewritePatternList *patterns) {\n";
   for (const auto &name : rewriterNames) {
     os << "  patterns->insert<" << name << ">(context);\n";
-- 
2.24.1.735.g03f4e72817-goog