op {
  graph_op_name: "SamplingDataset"
  visibility: HIDDEN
  in_arg {
    name: "rate"
    description: <<END
A scalar representing the sample rate. Each element of `input_dataset` is 
retained with this probability, independent of all other elements.
END
  }
  in_arg {
    name: "seed"
    description: <<END
A scalar representing seed of random number generator.
END
  }
  in_arg {
    name: "seed2"
    description: <<END
A scalar representing seed2 of random number generator.
END
  }
  summary: "Creates a dataset that takes a Bernoulli sample of the contents of another dataset."
  description: <<END
There is no direct Python API for creating Datasets of this type.  
TensorFlow's graph optimizer creates instances of SamplingDataset by fusing multiple 
operations together. Use the `experimental_optimization.filter_with_random_uniform_fusion`
flag in `tf.data.experimental.OptimizationOptions` to control whether this
optimization happens.
END
}
