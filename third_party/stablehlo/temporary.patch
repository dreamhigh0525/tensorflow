diff --ruN a/stablehlo/stablehlo/dialect/ChloOps.cpp b/stablehlo/stablehlo/dialect/ChloOps.cpp
--- stablehlo/stablehlo/dialect/ChloOps.cpp
+++ stablehlo/stablehlo/dialect/ChloOps.cpp
@@ -434,7 +434,7 @@
 
   // All operands of nested ops must be defined in the body or declared by the
   // cluster.
-  Block* body = getBody();
+  Block* body = SingleBlock::getBody();
   for (Operation& nested : body->without_terminator()) {
     if (!llvm::all_of(nested.getOpOperands(), [&](OpOperand& operand) {
           Operation* def = operand.get().getDefiningOp();
diff --ruN a/stablehlo/stablehlo/dialect/ChloOps.td b/stablehlo/stablehlo/dialect/ChloOps.td
--- stablehlo/stablehlo/dialect/ChloOps.td
+++ stablehlo/stablehlo/dialect/ChloOps.td
@@ -54,7 +54,7 @@
     dialects.
   }];
 
-  let emitAccessorPrefix = kEmitAccessorPrefix_Raw;
+  let emitAccessorPrefix = kEmitAccessorPrefix_Both;
 }
 
 class CHLO_Op<string mnemonic, list<Trait> traits> :
diff --ruN a/stablehlo/stablehlo/dialect/StablehloOps.cpp b/stablehlo/stablehlo/dialect/StablehloOps.cpp
--- stablehlo/stablehlo/dialect/StablehloOps.cpp
+++ stablehlo/stablehlo/dialect/StablehloOps.cpp
@@ -1855,8 +1855,7 @@
 }
 
 LogicalResult CollectivePermuteOp::verify() {
-  return verifyCollectivePermuteSourceTargetPairs(*this,
-                                                       source_target_pairs());
+  return verifyCollectivePermuteSourceTargetPairs(*this, source_target_pairs());
 }
 
 //===----------------------------------------------------------------------===//
@@ -5500,12 +5499,13 @@
 /// assignment ::= ssa-value `=` ssa-value
 void WhileOp::print(OpAsmPrinter& p) {
   p << '(';
-  llvm::interleaveComma(llvm::zip(getBody()->getArguments(), getOperands()), p,
-                        [&](auto zip) {
-                          p.printOperand(std::get<0>(zip));
-                          p << " = ";
-                          p.printOperand(std::get<1>(zip));
-                        });
+  llvm::interleaveComma(
+      llvm::zip(SingleBlock::getBody()->getArguments(), getOperands()), p,
+      [&](auto zip) {
+        p.printOperand(std::get<0>(zip));
+        p << " = ";
+        p.printOperand(std::get<1>(zip));
+      });
   p << ")";
   if (getNumOperands()) {
     p << " : ";
diff --ruN a/stablehlo/stablehlo/dialect/StablehloOps.td b/stablehlo/stablehlo/dialect/StablehloOps.td
--- stablehlo/stablehlo/dialect/StablehloOps.td
+++ stablehlo/stablehlo/dialect/StablehloOps.td
@@ -35,7 +35,7 @@
     a portability layer between ML frameworks and ML compilers.
   }];
 
-  let emitAccessorPrefix = kEmitAccessorPrefix_Raw;
+  let emitAccessorPrefix = kEmitAccessorPrefix_Both;
   let useDefaultAttributePrinterParser = 0;
   let useDefaultTypePrinterParser = 0;
 }
diff --ruN a/stablehlo/stablehlo/integrations/python/mlir/dialects/chlo.py b/stablehlo/stablehlo/integrations/python/mlir/dialects/chlo.py
--- stablehlo/stablehlo/integrations/python/mlir/dialects/chlo.py
+++ stablehlo/stablehlo/integrations/python/mlir/dialects/chlo.py
@@ -21,3 +21,8 @@
 def register_dialect(context, load=True):
   from .._mlir_libs import _chlo
   _chlo.register_dialect(context, load=load)
+
+
+# Backward compatibility with the old way of registering CHLO dialect
+def register_chlo_dialect(context, load=True):
+  register_dialect(context, load)
diff --ruN a/stablehlo/stablehlo/tests/lit.cfg.py b/stablehlo/stablehlo/tests/lit.cfg.py
--- stablehlo/stablehlo/tests/lit.cfg.py
+++ stablehlo/stablehlo/tests/lit.cfg.py
@@ -20,7 +20,6 @@
 
 import lit.formats
 from lit.llvm import llvm_config
-from lit.llvm.subst import ToolSubst
 import lit.util
 
 # Configuration file for the 'lit' test runner.
@@ -66,10 +65,6 @@
 tools = [
     'stablehlo-opt',
     'mlir-cpu-runner',
-    ToolSubst(
-        '%mlir_runner_utils_dir',
-        config.mlir_runner_utils_dir,
-        unresolved='ignore'),
 ]
 
 llvm_config.add_tool_substitutions(tools, tool_dirs)
diff --ruN a/stablehlo/stablehlo/tests/lit.site.cfg.py.in b/stablehlo/stablehlo/tests/lit.site.cfg.py.in
--- stablehlo/stablehlo/tests/lit.site.cfg.py.in
+++ stablehlo/stablehlo/tests/lit.site.cfg.py.in
@@ -44,7 +44,6 @@
 config.host_arch = "@HOST_ARCH@"
 config.stablehlo_src_root = "@STABLEHLO_SOURCE_DIR@"
 config.stablehlo_obj_root = "@CMAKE_BINARY_DIR@"
-config.mlir_runner_utils_dir = os.path.join(config.llvm_obj_root, "lib")
 
 # Support substitution of the tools_dir with user parameters. This is
 # used when we can't determine the tool dir at configuration time.

