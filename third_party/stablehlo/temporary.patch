diff --ruN a/stablehlo/stablehlo/dialect/CMakeLists.txt b/stablehlo/stablehlo/dialect/CMakeLists.txt
--- stablehlo/stablehlo/dialect/CMakeLists.txt
+++ stablehlo/stablehlo/dialect/CMakeLists.txt
@@ -156,14 +156,19 @@
 mlir_tablegen(VhloOps.cpp.inc -gen-op-defs)
 mlir_tablegen(VhloOpInterfaces.h.inc -gen-op-interface-decls)
 mlir_tablegen(VhloOpInterfaces.cpp.inc -gen-op-interface-defs)
+set(LLVM_TARGET_DEFINITIONS VhloEnums.td)
 mlir_tablegen(VhloEnums.h.inc -gen-enum-decls)
 mlir_tablegen(VhloEnums.cpp.inc -gen-enum-defs)
+set(LLVM_TARGET_DEFINITIONS VhloOps.td)
 mlir_tablegen(VhloAttrs.h.inc -gen-attrdef-decls)
 mlir_tablegen(VhloAttrs.cpp.inc -gen-attrdef-defs)
+set(LLVM_TARGET_DEFINITIONS VhloAttrs.td)
 mlir_tablegen(VhloAttrInterfaces.h.inc -gen-attr-interface-decls)
 mlir_tablegen(VhloAttrInterfaces.cpp.inc -gen-attr-interface-defs)
+set(LLVM_TARGET_DEFINITIONS VhloTypes.td)
 mlir_tablegen(VhloTypeInterfaces.h.inc -gen-type-interface-decls)
 mlir_tablegen(VhloTypeInterfaces.cpp.inc -gen-type-interface-defs)
+set(LLVM_TARGET_DEFINITIONS VhloOps.td)
 mlir_tablegen(VhloTypeDefs.h.inc -gen-typedef-decls --typedefs-dialect=vhlo)
 mlir_tablegen(VhloTypeDefs.cpp.inc -gen-typedef-defs --typedefs-dialect=vhlo)
 add_public_tablegen_target(VhloOpsIncGen)
diff --ruN a/stablehlo/stablehlo/dialect/TypeInference.cpp b/stablehlo/stablehlo/dialect/TypeInference.cpp
--- stablehlo/stablehlo/dialect/TypeInference.cpp
+++ stablehlo/stablehlo/dialect/TypeInference.cpp
@@ -2242,7 +2242,9 @@
   }
 
   auto getSliceDim = [&sliceSizes](int64_t index) -> int64_t {
-    return sliceSizes.getValues<int64_t>()[index];
+    return sliceSizes.getValues<int64_t>()[index] == -1
+               ? ShapedType::kDynamic
+               : sliceSizes.getValues<int64_t>()[index];
   };
 
   return inferGatherReturnTypeComponents(
diff --ruN a/stablehlo/stablehlo/dialect/VhloAttrs.td b/stablehlo/stablehlo/dialect/VhloAttrs.td
--- stablehlo/stablehlo/dialect/VhloAttrs.td
+++ stablehlo/stablehlo/dialect/VhloAttrs.td
@@ -18,6 +18,7 @@
 #define STABLEHLO_DIALECT_VHLO_ATTRS
 
 include "stablehlo/dialect/VhloBase.td"
+include "stablehlo/dialect/VhloDialect.td"
 
 include "mlir/IR/AttrTypeBase.td"
 
diff --ruN a/stablehlo/stablehlo/dialect/VhloDialect.td b/stablehlo/stablehlo/dialect/VhloDialect.td
--- stablehlo/stablehlo/dialect/VhloDialect.td
+++ stablehlo/stablehlo/dialect/VhloDialect.td
@@ -0,0 +1,40 @@
+/* Copyright 2023 The TensorFlow Authors. All Rights Reserved.
+   Copyright 2023 The StableHLO Authors.
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+==============================================================================*/
+
+#ifndef STABLEHLO_DIALECT_VHLO_DIALECT
+#define STABLEHLO_DIALECT_VHLO_DIALECT
+
+def VHLO_Dialect : Dialect {
+  let name = "vhlo";
+  let cppNamespace = "::mlir::vhlo";
+
+  let description = [{
+    A shim opset of Versioned StableHLO ops for versions 0.x.x and 1.x.x.
+
+    Version log:
+      0.3.0: Bootstrap from MHLO: https://github.com/openxla/stablehlo/pull/1.
+      0.4.0: Add AllGatherOp::use_global_device_ids: https://github.com/openxla/stablehlo/pull/272.
+             Add CollectivePermuteOp::channel_handle: https://github.com/openxla/stablehlo/pull/388.
+             Add CustomCallOp::output_operand_aliases: https://github.com/openxla/stablehlo/pull/403.
+             Add PartitionIdOp: https://github.com/openxla/stablehlo/pull/673.
+             Add AllToAllOp::channel_handle: https://github.com/openxla/stablehlo/pull/794.
+  }];
+
+  let useDefaultAttributePrinterParser = 0;
+  let useDefaultTypePrinterParser = 0;
+}
+
+#endif
diff --ruN a/stablehlo/stablehlo/dialect/VhloOps.td b/stablehlo/stablehlo/dialect/VhloOps.td
--- stablehlo/stablehlo/dialect/VhloOps.td
+++ stablehlo/stablehlo/dialect/VhloOps.td
@@ -23,26 +23,7 @@
 // Dialect and Ops
 //===----------------------------------------------------------------------===//
 
-def VHLO_Dialect : Dialect {
-  let name = "vhlo";
-  let cppNamespace = "::mlir::vhlo";
-
-  let description = [{
-    A shim opset of Versioned StableHLO ops for versions 0.x.x and 1.x.x.
-
-    Version log:
-      0.3.0: Bootstrap from MHLO: https://github.com/openxla/stablehlo/pull/1.
-      0.4.0: Add AllGatherOp::use_global_device_ids: https://github.com/openxla/stablehlo/pull/272.
-             Add CollectivePermuteOp::channel_handle: https://github.com/openxla/stablehlo/pull/388.
-             Add CustomCallOp::output_operand_aliases: https://github.com/openxla/stablehlo/pull/403.
-             Add PartitionIdOp: https://github.com/openxla/stablehlo/pull/673.
-             Add AllToAllOp::channel_handle: https://github.com/openxla/stablehlo/pull/794.
-  }];
-
-  let useDefaultAttributePrinterParser = 0;
-  let useDefaultTypePrinterParser = 0;
-}
-
+include "stablehlo/dialect/VhloDialect.td"
 include "stablehlo/dialect/VhloTypes.td"
 include "stablehlo/dialect/VhloEnums.td"
 include "stablehlo/dialect/VhloAttrs.td"
diff --ruN a/stablehlo/stablehlo/dialect/VhloTypes.td b/stablehlo/stablehlo/dialect/VhloTypes.td
--- stablehlo/stablehlo/dialect/VhloTypes.td
+++ stablehlo/stablehlo/dialect/VhloTypes.td
@@ -18,6 +18,7 @@
 #define STABLEHLO_DIALECT_VHLO_TYPES
 
 include "stablehlo/dialect/VhloBase.td"
+include "stablehlo/dialect/VhloDialect.td"
 
 include "mlir/IR/AttrTypeBase.td"
 

