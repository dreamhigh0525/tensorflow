op {
  graph_op_name: "DiagPart"
  in_arg {
    name: "input"
    description: <<END
Rank k tensor where k is even and not zero.
END
  }
  out_arg {
    name: "diagonal"
    description: <<END
The extracted diagonal.
END
  }
  summary: "Returns the diagonal part of the tensor."
  description: <<END
This operation returns a tensor with the `diagonal` part
of the `input`. The `diagonal` part is computed as follows:

Assume `input` has dimensions `[D1,..., Dk, D1,..., Dk]`, then the output is a
tensor of rank `k` with dimensions `[D1,..., Dk]` where:

`diagonal[i1,..., ik] = input[i1, ..., ik, i1,..., ik]`.

For a rank 2 tensor, `diag_part` and `tensor_diag_part`
produce the same result. An example where they differ
is given below.

```
# 'input' is [[[[1111,1112],[1121,1122]],
               [[1211,1212],[1221,1222]]],
              [[[2111, 2112], [2121, 2122]],
               [[2211, 2212], [2221, 2222]]]
             ]

tf.tensor_diag_part(input) ==> [[1111, 1212], [2121, 2222]]
tf.diag_part(input) ==> [[[1111, 1122],
                          [1211, 1222]],
                         [[2111, 2122],
                          [2211, 2222]]]
```
END
}
